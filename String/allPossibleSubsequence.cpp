#include <bits/stdc++.h>
using namespace std;

// You are given a string 'STR' containing lowercase English letters from a to z inclusive. 
// Your task is to find all non-empty possible subsequences of 'STR'.

// A Subsequence of a string is the one which is generated by deleting 0 or more letters from 
// the string and keeping the rest of the letters in the same order.

void solve(vector<string>&ans, int i, int&n, string&str, string&req){
	if(i >= n-1){
		return;
	}

	for(int j=i+1; j<n; j++){
		req.push_back(str[j]);
		ans.push_back(req);
		solve(ans, j, n, str, req);
		req.pop_back();
	}
}

vector<string> subsequences(string str){
	
	int n = str.length();

	vector<string> ans;

	for(int i=0; i<n; i++){
		string req="";
		req.push_back(str[i]);
		ans.push_back(req);
		solve(ans, i, n, str, req);
	}
	return ans;
}
